-- =============================================
-- Author:		<Author,,Name>
-- Create date: <19-09-2018>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[PAM_MergedDocumentResult_Save_SP] 
	@PAMId AS BIGINT
	,@Attachment AS VARCHAR(MAX)
	,@MergeByFQN AS VARCHAR(500)
	,@MergeBy AS VARCHAR(500)
	,@IsPreview AS BIT
AS
BEGIN
	DECLARE @LastMajorVersion AS INT
	SET @LastMajorVersion = (
		SELECT
			MAX([MajorVersion] + 1)
		FROM [dbo].[PAM_MergedDocumentResult]
		WHERE [PAMId] = @PAMId
	)

	IF((SELECT COUNT(PAMId) FROM [PAM_MergedDocumentResult] WHERE [PAMId] = @PAMId AND [IsForHistory] = 0) <= 0)
		INSERT INTO [dbo].[PAM_MergedDocumentResult] (
			[PAMId]
			,[Attachment]
			,[MajorVersion]
			,[IsForHistory]
			,[IsPreview]
			,[CreatedByFQN]
			,[CreatedBy]
			,[CreatedOn]
			,[ModifiedByFQN]
			,[ModifiedBy]
			,[ModifiedOn]
		) VALUES (
			@PAMId
			,@Attachment
			,ISNULL(@LastMajorVersion, 1)
			,0
			,@IsPreview
			,@MergeByFQN
			,@MergeBy
			,GETDATE()
			,@MergeByFQN
			,@MergeBy
			,GETDATE()
		)
	ELSE
		UPDATE [dbo].[PAM_MergedDocumentResult] SET
			[Attachment] = @Attachment
			,[ModifiedByFQN] = @MergeByFQN
			,[ModifiedBy] = @MergeBy
			,[ModifiedOn] = GETDATE()
		 WHERE [PAMId] = @PAMId
		 AND [IsForHistory] = 0
END
















-- =============================================
-- Author:		<Author,,Name>
-- Create date: <19-09-2018>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[CM_MergedDocumentResult_Save_SP] 
	@CMId AS BIGINT
	,@Attachment AS VARCHAR(MAX)
	,@MergeByFQN AS VARCHAR(500)
	,@MergeBy AS VARCHAR(500)
	,@IsPreview AS BIT
AS
BEGIN
	DECLARE @LastMajorVersion AS INT
	SET @LastMajorVersion = (
		SELECT
			MAX([MajorVersion] + 1)
		FROM [dbo].[CM_MergedDocumentResult]
		WHERE [CMId] = @CMId
	)

	IF((SELECT COUNT(CMId) FROM [dbo].[CM_MergedDocumentResult] WHERE [CMId] = @CMId AND [IsForHistory] = 0) <= 0)
		INSERT INTO [dbo].[CM_MergedDocumentResult] (
			[CMId]
			,[Attachment]
			,[MajorVersion]
			,[IsForHistory]
			,[IsPreview]
			,[CreatedByFQN]
			,[CreatedBy]
			,[CreatedOn]
			,[ModifiedByFQN]
			,[ModifiedBy]
			,[ModifiedOn]
		) VALUES (
			@CMId
			,@Attachment
			,ISNULL(@LastMajorVersion, 1)
			,0
			,@IsPreview
			,@MergeByFQN
			,@MergeBy
			,GETDATE()
			,@MergeByFQN
			,@MergeBy
			,GETDATE()
		)
	ELSE
		UPDATE [dbo].[CM_MergedDocumentResult] SET
			[Attachment] = @Attachment
			,[ModifiedByFQN] = @MergeByFQN
			,[ModifiedBy] = @MergeBy
			,[ModifiedOn] = GETDATE()
		 WHERE [CMId] = @CMId
		 AND [IsForHistory] = 0
END









-- =============================================
-- Author:		<Author,,Name>
-- Create date: <24-09-2018>
-- Description:	<Description,,>
-- =============================================
alter PROCEDURE [dbo].[Generate_Document_PAM_Data_SP]
	@Id AS bigint = NULL
AS
BEGIN
	Select 
		PAM.Id,
		-- Cover
		MProductType.Name AS ProductType, 
		PAM_BorrowerOrTargetCompanyData.ProjectCompanyOrBorrowerCompanyOrTargetCompany AS ProjectCompanyName,
		PAM_ProjectData.ProjectName, 
		PAM_ProjectData.ProjectCode,
		PAM.PAMDate, 
		-- Project
		ProjectCostMCurr.Code AS ProjectCostCurr,
		CAST(CONVERT(varchar, CAST(PAM_ProjectData.ProjectCostAmount AS Money), 1) AS varchar) as ProjectCostAmount,				
		PAM_ProjectData.ProjectDescription,
		PAM_ProjectData.Sector,
		PAM_ProjectData.SectorDesc,
		PAM_ProjectData.SubSector,
		PAM_ProjectData.SubSectorDesc,
		PAM_ProjectData.ProjectScope,
		PAM_ProjectData.ProjectStructure,
		PAM_ProjectData.FundingNeeds,
		PAM_ProjectData.DealStrategy,
		-- Borrower
		PAM_BorrowerOrTargetCompanyData.UltimateBeneficialOwner,
		MIIFRating.Rate AS IIFRate,
		PAM_BorrowerOrTargetCompanyData.IIFRatingDate,
		MSAndPRating.Rate AS SAndPRate,
		MMoodysRating.Rate AS MoodysRate,
		MFitchRating.Rate AS FitchRate,
		MPefindoRating.Rate AS PefindoRate,
		MSAndECategory.Rate AS SAndECategoryRate,
		MSAndERatingType.Rate AS SAndECategoryType,
		MLQCOrBICheckingRating.Rate AS LQCOrBICheckingRate,
		PAM_BorrowerOrTargetCompanyData.BusinessActivities,
		PAM_BorrowerOrTargetCompanyData.OtherInformation,
		-- Proposal
		PAM_ProposalData.Purpose,
		MApprovalAuthority.Name AS ApprovalAuthority,
		GroupExposureCurr.Code AS GroupExposureCurr,		
		CAST(CONVERT(varchar, CAST(PAM_ProposalData.GroupExposureAmount AS Money), 1) AS varchar) as GroupExposureAmount,
		PAM_ProposalData.Remarks,
		PAM_ProposalData.FacilityOrInvestmentRemarks,
		PAM_ProposalData.ExpectedHoldingPeriodYear,
		PAM_ProposalData.ExpectedHoldingPeriodMonth,
		PAM_ProposalData.TenorMonth, 
		PAM_ProposalData.TenorYear,
		PAM_ProposalData.AverageLoanLifeMonth,
		PAM_ProposalData.AverageLoanLifeYear,
		PAM_ProposalData.PricingInterestRate,
		PAM_ProposalData.PricingCommitmentFee,
		PAM_ProposalData.PricingUpfrontFacilityFee,
		PAM_ProposalData.PricingStructuringFee,
		PAM_ProposalData.PricingArrangerFee,
		PAM_ProposalData.PricingCollateral,
		PAM_ProposalData.PricingOtherConditions,
		PAM_ProposalData.PricingExceptionToIIFPolicy,
		MReviewPeriod.Name AS ReviewPeriod,
		-- Recommendation
		PAM_RecommendationData.KeyInvestmentRecommendation,
		PAM_RecommendationData.Recommendation,
		PAM_RecommendationData.AccountResponsibleCIOName

		,MWorkflowStatusId
			from PAM
				LEFT JOIN PAM_ProjectData ON PAM_ProjectData.Id =  PAM.Id
				LEFT JOIN MCurrency as ProjectCostMCurr ON ProjectCostMCurr.Id = PAM_ProjectData.ProjectCostMCurrencyId 
				
				LEFT JOIN PAM_BorrowerOrTargetCompanyData ON PAM_BorrowerOrTargetCompanyData.Id = PAM.Id
				LEFT JOIN MIIFRating ON MIIFRating.Id = PAM_BorrowerOrTargetCompanyData.MIIFRatingId
				LEFT JOIN MSAndPRating ON MSAndPRating.Id = PAM_BorrowerOrTargetCompanyData.ExternalRatingMSAndPRatingId
				LEFT JOIN MMoodysRating ON MMoodysRating.Id = PAM_BorrowerOrTargetCompanyData.ExternalRatingMMoodysRatingId
				LEFT JOIN MFitchRating ON MFitchRating.Id = PAM_BorrowerOrTargetCompanyData.ExternalRatingMFitchRatingId
				LEFT JOIN MPefindoRating ON MPefindoRating.Id = PAM_BorrowerOrTargetCompanyData.ExternalRatingMPefindoRatingId
				LEFT JOIN MSAndECategory ON MSAndECategory.Id = PAM_BorrowerOrTargetCompanyData.MSAndECategoryId
				LEFT JOIN MSAndERatingType ON MSAndERatingType.Id = PAM_BorrowerOrTargetCompanyData.MSAndERatingTypeId
				LEFT JOIN MLQCOrBICheckingRating ON MLQCOrBICheckingRating.Id = PAM_BorrowerOrTargetCompanyData.MLQCOrBICheckingRatingId

				LEFT JOIN PAM_ProposalData ON PAM_ProposalData.Id =  PAM.Id
				LEFT JOIN MApprovalAuthority ON MApprovalAuthority.Id = PAM_ProposalData.MApprovalAuthorityId
				
				LEFT JOIN MCurrency as GroupExposureCurr ON GroupExposureCurr.Id = PAM_ProposalData.GroupExposureMCurrencyId
				LEFT JOIN MReviewPeriod ON MReviewPeriod.Id = PAM_ProposalData.PricingMReviewPeriodId
				LEFT JOIN MProductType ON MProductType.Id = PAM.MProductTypeId
				LEFT JOIN PAM_RecommendationData ON PAM_RecommendationData.Id = PAM.Id
			where PAM.Id = @Id
END












alter PROCEDURE [dbo].[Generate_Document_CM_Data_SP]
	@Id AS bigint = NULL
AS
BEGIN
	Select 
		CM.Id

		-- Cover
		,CMReview.Name AS ReviewMemo
		,MProductType.Name As ProductType
		,CM_BorrowerOrInvesteeCompanyData.ProjectCompanyOrInvesteeOrBorrower AS CompanyName
		,CM.CMNumber
		,CM_ProjectData.ProjectName
		,CM_ProjectData.ProjectCode
		,CM.CMDate
		-- Project
		,CM_ProjectData.ProjectDescription
		,CM_ProjectData.SubSector
		,CM_ProjectData.SubSectorDesc
		,CM_ProjectData.Sector
		,CM_ProjectData.SectorDesc
		,ProjectCostMCurr.Code As ProjectCosCurr
		,CAST(CONVERT(varchar, CAST(CM_ProjectData.ProjectCostAmount AS Money), 1) AS varchar) as ProjectCostAmount		
		,CM_ProjectData.ProjectScope
		,CM_ProjectData.ProjectStructure
		,CM_ProjectData.FundingNeeds
		,CM_ProjectData.DealStrategy
		-- Borrower
		,CM_BorrowerOrInvesteeCompanyData.UltimateBeneficialOwner
		,MIIFRating.Rate AS IIFRate
		,CM_BorrowerOrInvesteeCompanyData.IIFRatingDate
		,MSAndPRating.Rate AS SAndPRate
		,MMoodysRating.Rate AS MoodysRate
		,MFitchRating.Rate AS FitchRate
		,MPefindoRating.Rate AS PefindoRate
		,MSAndECategory.Rate AS SAndECategoryRate
		,MSAndERatingType.Rate AS SAndECategoryType
		,MLQCOrBICheckingRating.Rate AS LQCOrBICheckingRate
		,CM_BorrowerOrInvesteeCompanyData.BusinessActivities
		,CM_BorrowerOrInvesteeCompanyData.OtherInformation
		-- Proposal
		,CM_ProposalOrFacilityData.Purpose
		,MApprovalAuthority.Name AS ApprovalAuhority
		,GroupExposureCurr.Code AS GroupExposureCurr
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacilityData.GroupExposureAmount AS Money), 1) AS varchar) as GroupExposureAmount		
		,CM_ProposalOrFacilityData.Remarks
		,CM_ProposalOrFacilityData.FacilityOrInvestmentRemarks
		,CM_ProposalOrFacilityData.ExpectedHoldingPeriodYear
		,CM_ProposalOrFacilityData.ExpectedHoldingPeriodMonth
		,CM_ProposalOrFacilityData.TenorMonth
		,CM_ProposalOrFacilityData.TenorYear
		,CM_ProposalOrFacilityData.AverageLoanLifeMonth
		,CM_ProposalOrFacilityData.AverageLoanLifeYear
		,CM_ProposalOrFacilityData.PricingInterestRate
		,CM_ProposalOrFacilityData.PricingCommitmentFee
		,CM_ProposalOrFacilityData.PricingUpfrontFacilityFee
		,CM_ProposalOrFacilityData.PricingStructuringFee
		,CM_ProposalOrFacilityData.PricingArrangerFee
		,CM_ProposalOrFacilityData.PricingCollateral
		,CM_ProposalOrFacilityData.PricingOtherConditions
		,CM_ProposalOrFacilityData.PricingExceptionToIIFPolicy		
		,ProposalReviewPeriod2.Name As ProposalReviewPeriod
		-- ProposalcLimit Compliance
		,ProposalOrFacility_LimitComplianceCurr.Code as LimitComplianceCurrency
		,CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceCurrencyId
		,CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceMonth
		,CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceYear

		
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceSingleProjectExposureMaxLimit AS Money), 1) AS varchar) as FacilityLimitComplianceSingleProjectExposureMaxLimit						
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceSingleProjectExposureProposed AS Money), 1) AS varchar) as FacilityLimitComplianceSingleProjectExposureProposed
		
		,CASE CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceSingleProjectExposureRemarksId
            WHEN 1 THEN 'Comply'
            WHEN 2 THEN 'Not Comply'
			WHEN 3 THEN 'N/A'
            ELSE '' 
            END AS SingleProjectExposureRemarks
		--,CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceProductItemId
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceProductMaxLimit AS Money), 1) AS varchar) as FacilityLimitComplianceProductMaxLimit
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceProductProposed AS Money), 1) AS varchar) as FacilityLimitComplianceProductProposed				

		,CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceProductRemarksId
		,CASE CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceProductRemarksId
            WHEN 1 THEN 'Comply'
            WHEN 2 THEN 'Not Comply'
			WHEN 3 THEN 'N/A'
            ELSE '' 
            END AS ProductRemarks
		,CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceRiskRatingId
		,MIIFRating2.Rate AS FacilityLimitComplianceIIFRate

		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceRiskRatingMaxLimit AS Money), 1) AS varchar) as FacilityLimitComplianceRiskRatingMaxLimit
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceRiskRatingProposed AS Money), 1) AS varchar) as FacilityLimitComplianceRiskRatingProposed
		
		,CASE CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceRiskRatingRemarksId
            WHEN 1 THEN 'Comply'
            WHEN 2 THEN 'Not Comply'
			WHEN 3 THEN 'N/A'
            ELSE '' 
            END AS RiskRatingRemarks

		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceGrupExposureMaxLimit AS Money), 1) AS varchar) as FacilityLimitComplianceGrupExposureMaxLimit
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceGrupExposureProposed AS Money), 1) AS varchar) as FacilityLimitComplianceGrupExposureProposed

		,CASE CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceGrupExposureRemarksId
			WHEN 1 THEN 'Comply'
            WHEN 2 THEN 'Not Comply'
			WHEN 3 THEN 'N/A'
            ELSE '' 
            END AS GrupExposureRemarks				

		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceSectorExposureMaxLimit AS Money), 1) AS varchar) as FacilityLimitComplianceSectorExposureMaxLimit
		,CAST(CONVERT(varchar, CAST(CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceSectorExposureProposed AS Money), 1) AS varchar) as FacilityLimitComplianceSectorExposureProposed
		
		,CASE CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceSectorExposureRemarksId
			WHEN 1 THEN 'Comply'
            WHEN 2 THEN 'Not Comply'
			WHEN 3 THEN 'N/A'
            ELSE '' 
            END AS SectorExposureRemarks
		,CM_ProposalOrFacility_LimitCompliance.notes
		-- Reccomendation
		,CM_RecommendationData.KeyInvestmentRecommendation
		,CM_RecommendationData.Recommendation
		,CM_RecommendationData.AccountResponsibleCIOName


		,MWorkflowStatusId
			from CM
				LEFT JOIN MReviewPeriod AS CMReview ON CMReview.Id = CM.MReviewPeriodId
				LEFT JOIN CM_ProjectData ON CM_ProjectData.Id =  CM.Id
				LEFT JOIN MCurrency AS ProjectCostMCurr ON ProjectCostMCurr.Id = CM_ProjectData.ProjectCostMCurrencyId
				LEFT JOIN CM_BorrowerOrInvesteeCompanyData ON CM_BorrowerOrInvesteeCompanyData.Id = CM.Id
				LEFT JOIN MIIFRating ON MIIFRating.Id = CM_BorrowerOrInvesteeCompanyData.MIIFRatingId				
				LEFT JOIN MSAndPRating ON MSAndPRating.Id = CM_BorrowerOrInvesteeCompanyData.ExternalRatingMSAndPRatingId
				LEFT JOIN MMoodysRating ON MMoodysRating.Id = CM_BorrowerOrInvesteeCompanyData.ExternalRatingMMoodysRatingId
				LEFT JOIN MFitchRating ON MFitchRating.Id = CM_BorrowerOrInvesteeCompanyData.ExternalRatingMFitchRatingId
				LEFT JOIN MPefindoRating ON MPefindoRating.Id = CM_BorrowerOrInvesteeCompanyData.ExternalRatingMPefindoRatingId
				LEFT JOIN MSAndECategory ON MSAndECategory.Id = CM_BorrowerOrInvesteeCompanyData.MSAndECategoryId
				LEFT JOIN MSAndERatingType ON MSAndERatingType.Id = CM_BorrowerOrInvesteeCompanyData.MSAndERatingTypeId
				LEFT JOIN MLQCOrBICheckingRating ON MLQCOrBICheckingRating.Id = CM_BorrowerOrInvesteeCompanyData.MLQCOrBICheckingRatingId
				LEFT JOIN CM_ProposalOrFacilityData ON CM_ProposalOrFacilityData.Id =  CM.Id
				LEFT JOIN MApprovalAuthority ON MApprovalAuthority.Id = CM_ProposalOrFacilityData.MApprovalAuthorityId
				LEFT JOIN MCurrency as GroupExposureCurr ON GroupExposureCurr.Id = CM_ProposalOrFacilityData.GroupExposureMCurrencyId
				LEFT JOIN MReviewPeriod As ProposalReviewPeriod ON ProposalReviewPeriod.Id = CM.MReviewPeriodId
				LEFT JOIN MReviewPeriod As ProposalReviewPeriod2 ON ProposalReviewPeriod2.Id = CM_ProposalOrFacilityData.PricingMReviewPeriodId
				LEFT JOIN MProductType ON MProductType.Id = CM.MProductTypeId
				LEFT JOIN CM_ProposalOrFacility_LimitCompliance ON CM_ProposalOrFacility_LimitCompliance.Id = CM.Id
				LEFT JOIN MIIFRating MIIFRating2 ON MIIFRating2.Id = CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceRiskRatingId
				LEFT JOIN MCurrency as ProposalOrFacility_LimitComplianceCurr ON ProposalOrFacility_LimitComplianceCurr.Id = CM_ProposalOrFacility_LimitCompliance.FacilityLimitComplianceCurrencyId
				LEFT JOIN CM_RecommendationData ON CM_RecommendationData.Id = CM.Id
			where CM.Id = @Id
END













alter PROCEDURE [dbo].[Generate_Document_CM_Borrower_SP]
	@Id AS bigint = NULL
AS
BEGIN
	SELECT 
		LTRIM(RTRIM(BorrowerOrCompany)) as BorrowerOrCompany,
		ProjectSponsorsOrShareHolders,
		CAST(CONVERT(varchar, CAST(PercentOwnership AS Money), 1) AS varchar) as PercentOwnership		
			from 
				Vw_PAMCM_BorrowerOrCompany				
			where Vw_PAMCM_BorrowerOrCompany.PAMOrCMId = @Id		
			and MDocTypeId = 2			
END







alter PROCEDURE [dbo].[Generate_Document_CM_Borrower_Cover_SP]
	@Id AS bigint = NULL
AS
BEGIN
	SELECT 
		LTRIM(RTRIM(BorrowerOrCompany)) as BorrowerOrCompany,		
		Id	
			from 
				Vw_PAMCM_BorrowerOrCompany				
			where Vw_PAMCM_BorrowerOrCompany.PAMOrCMId = @Id	
			and MDocTypeId = 2
		order by Id 
END
